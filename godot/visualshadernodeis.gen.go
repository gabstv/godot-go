package godot

import (
	"github.com/gabstv/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

// VisualShaderNodeIsFunction is an enum for Function values.
type VisualShaderNodeIsFunction int

const (
	VisualShaderNodeIsFuncIsInf VisualShaderNodeIsFunction = 0
	VisualShaderNodeIsFuncIsNan VisualShaderNodeIsFunction = 1
)

//func NewVisualShaderNodeIsFromPointer(ptr gdnative.Pointer) VisualShaderNodeIs {
func newVisualShaderNodeIsFromPointer(ptr gdnative.Pointer) VisualShaderNodeIs {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeIs{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Returns the boolean result of the comparison between [code]INF[/code] or [code]NaN[/code] and a scalar parameter.
*/
type VisualShaderNodeIs struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeIs) BaseClass() string {
	return "VisualShaderNodeIs"
}

/*
        Undocumented
	Args: [], Returns: enum.VisualShaderNodeIs::Function
*/
func (o *VisualShaderNodeIs) GetFunction() VisualShaderNodeIsFunction {
	//log.Println("Calling VisualShaderNodeIs.GetFunction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeIs", "get_function")

	// Call the parent method.
	// enum.VisualShaderNodeIs::Function
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	return VisualShaderNodeIsFunction(ret)
}

/*
        Undocumented
	Args: [{ false func int}], Returns: void
*/
func (o *VisualShaderNodeIs) SetFunction(function gdnative.Int) {
	//log.Println("Calling VisualShaderNodeIs.SetFunction()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(function)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualShaderNodeIs", "set_function")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

// VisualShaderNodeIsImplementer is an interface that implements the methods
// of the VisualShaderNodeIs class.
type VisualShaderNodeIsImplementer interface {
	VisualShaderNodeImplementer
	SetFunction(function gdnative.Int)
}
