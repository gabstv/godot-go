package godot

import (
	"github.com/gabstv/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewVisualShaderNodeOuterProductFromPointer(ptr gdnative.Pointer) VisualShaderNodeOuterProduct {
func newVisualShaderNodeOuterProductFromPointer(ptr gdnative.Pointer) VisualShaderNodeOuterProduct {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualShaderNodeOuterProduct{}
	obj.SetBaseObject(owner)

	return obj
}

/*
[code]OuterProduct[/code] treats the first parameter [code]c[/code] as a column vector (matrix with one column) and the second parameter [code]r[/code] as a row vector (matrix with one row) and does a linear algebraic matrix multiply [code]c * r[/code], yielding a matrix whose number of rows is the number of components in [code]c[/code] and whose number of columns is the number of components in [code]r[/code].
*/
type VisualShaderNodeOuterProduct struct {
	VisualShaderNode
	owner gdnative.Object
}

func (o *VisualShaderNodeOuterProduct) BaseClass() string {
	return "VisualShaderNodeOuterProduct"
}

// VisualShaderNodeOuterProductImplementer is an interface that implements the methods
// of the VisualShaderNodeOuterProduct class.
type VisualShaderNodeOuterProductImplementer interface {
	VisualShaderNodeImplementer
}
